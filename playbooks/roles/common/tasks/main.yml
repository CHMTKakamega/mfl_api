---
# Set up UFW to allow ports 80,443 and 22
# Also rate limit SSH connections and log new connections
# The default policy is 'deny' ( unless whitelisted )

- ufw: state=enabled policy=deny
- ufw: rule=allow port=80 proto=tcp
- ufw: rule=allow port=443 proto=tcp
- ufw: rule=allow name=OpenSSH
- ufw: rule=limit port=ssh proto=tcp
- ufw: logging=on

- locale_gen: name=en_US.UTF-8 state=present

# Add additional apt repositories
- apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc state=present
- apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main' state=present

- apt_key: url=https://packages.elasticsearch.org/GPG-KEY-elasticsearch state=present
- apt_repository: repo='deb http://packages.elasticsearch.org/elasticsearch/1.5/debian stable main' state=present

# Update the machine's APT cache
- apt: upgrade=dist update_cache=yes

- name: Install essential packages
  apt: 'name={{item}} state=latest'
  with_items:
    - build-essential
    - nginx
    - openjdk-7-jdk
    - git
    - python-virtualenv
    - python-psycopg2
    - virtualenvwrapper
    - binutils
    - gdal-bin
    - libproj-dev
    - libgeoip1
    - graphviz
    - libgraphviz-dev
    - supervisor
    - postgresql-9.4
    - postgresql-9.4-postgis-2.1
    - elasticsearch

# Install build dependencies of some virtualenv packages
- apt: pkg=python-psycopg2 state=build-dep
- apt: pkg=python-shapely state=build-dep
- apt: pkg=python-gdal state=build-dep
- apt: pkg=python-numpy state=build-dep
- apt: pkg=cython state=build-dep

# Confirm that the essential services are started
- service: name=nginx state=restarted
- service: name=postgresql state=restarted
- service: name=supervisor state=restarted
- service: name=elasticsearch enabled=yes state=restarted
